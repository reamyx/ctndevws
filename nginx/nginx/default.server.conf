######Nginx默认服务器default配置#####

#location配置规则:
#   优先匹配普通location,匹配到规则时继续搜索最大长度匹配直到匹配完所有规则
#           无指示,前缀匹配时继续搜索可能的最大匹配和正则匹配,除非结果为"精确匹配"
#       ^~  非正则匹配指示,同无指示匹配,但前缀匹配时终止后继正则匹配
#       =   完全匹配指示,精确匹配且终止后继正则匹配(无需最大匹配)
#
#   其次匹配正则location,按配置文件序,匹配成功时终止匹配并覆盖先前的普通匹配
#       ~   正则匹配,区分大小写
#       ~*  正则匹配,不区分大小写
#
#   (另外有"@"匹配指示定义"Named Location",用于内部转发(重定向)处理,和客户端无关)
#   
#   总结:
#       普通匹配过程中一但"精确匹配",则终止后继匹配(隐含规则)
#       正则匹配让步普通的"精确匹配"结果,但覆盖普通匹配的最大前缀匹配结果
#
#   "location = / {}": 仅匹配根路径,如"http://host/",为根路径访问避免其它匹配
#   "location   / {}": 可匹配所有其它规则无法匹配到的路径,类似默认规则


#默认主机default,location可嵌套定义,但不推荐
server {
    #监听端口地址配置
    include         default.server.port;
    
    #域名可以有多个，用空格隔开
    server_name     "";
    index           index.html;
    
    #结合-P选项指定的工作目录确定资源位置
    root            ../webroot;
    
    #shell应用请求由Fcgiwrap处理(fcgi)
    location ^~ /Shell-CGI- {
        fastcgi_pass    localhost:8001;
        fastcgi_index   index.sh;
        fastcgi_param   DOCUMENT_ROOT .;
        include         fastcgi_params;
    }
    
    #PHP应用请求(fcgi)
    location ^~ /PHP-CGI- {
        fastcgi_pass    localhost:8002;
        fastcgi_index   index.php;
        include         fastcgi_params;
    }
    
    #python3应用请求(uwsgi)
    location ^~ /Python3-CGI- {
        uwsgi_pass      localhost:8003;
        include         uwsgi_params;
    }
    
    #lua应用请求(uwsgi)
    location ^~ /Lua-CGI- {
        uwsgi_pass      localhost:8005;
        uwsgi_modifier1 6;
        include         uwsgi_params;
    }
    
    #通用CGI应用请求(uwsgi)
    location ^~ /Common-CGI- {
        uwsgi_pass      localhost:8006;
        include         uwsgi_params;
    }
    
    #默认匹配,可用于rewrite和其它操作
    location / {
        #导入网关程序的重写规则
        #用于映射应用名称到具体网关的对应关系
        include         *.default.rewrite;
    }
    
    #禁止.htaccess文件访问
    location ~ /\.htaccess {
        deny all;
    }
    
    # 错误页(404)
    error_page 404 /404.html;
    
    # 错误页(50X)
    error_page 500 502 503 504 /50x.html;
    
    #目录列表
    #include        autoindex.location;
    
    #Nginx状态页
    include     ngxstate.location;
    
    #访问日志
    access_log  ../logs/access.log  access;
}

